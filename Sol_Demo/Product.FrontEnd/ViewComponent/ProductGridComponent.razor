@page "/productgrid"

@inherits ProductGridComponentViewModel

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <button class="btn btn-danger" @onclick="base.OnAdd">Add Product</button>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-sm-12">
            @if (base.IsLoad == true)
            {

                @if (base.ErrorMessage == null)
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped table-dark">
                            <thead>
                                <tr>
                                    <th>Product Name</th>
                                    <th>Unit Price</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var productModel in base.ListProducts)
                                {
                                    <tr>
                                        <td>@productModel.ProductName</td>
                                        <td>@productModel.UnitPrice</td>
                                        <td>
                                            <button class="btn btn-danger" @onclick="@(()=> base.OnEdit(productModel.ProductIdentity))">Edit</button>
                                        </td>
                                        <td>
                                            <a class="btn btn-danger" @onclick="@(()=> base.OnDelete(productModel.ProductIdentity))">Delete</a>
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <ErrorMessageComponent ErrorMessage="@base.ErrorMessage"></ErrorMessageComponent>
                }

            }
            else
            {
                <div>Loading...</div>
            }

            <AddProductComponent @ref="base.AddProductVM" RefreshEvent="base.RefreshState"></AddProductComponent>
            <EditProductComponent @ref="base.EditProductVM" SelectedProduct="base.SelectedProduct" RefreshEvent="base.RefreshState"></EditProductComponent>
            <DeleteProductComponent @ref="base.DeleteProductVM" SelectedProduct="base.SelectedProduct" RefreshEvent="base.RefreshState"></DeleteProductComponent>
        </div>
    </div>
</div>